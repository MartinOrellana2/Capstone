# Generated by Django 5.2.5 on 2025-08-26 19:08

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('sku', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=150)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('marca', models.CharField(blank=True, max_length=50, null=True)),
                ('precio_venta', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('stock', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Servicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('precio_base', models.DecimalField(decimal_places=2, help_text='Precio base o por hora del servicio.', max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Vehiculo',
            fields=[
                ('patente', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('marca', models.CharField(max_length=50)),
                ('modelo', models.CharField(max_length=50)),
                ('anio', models.IntegerField(verbose_name='Año')),
                ('color', models.CharField(blank=True, max_length=30, null=True)),
                ('vin', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='VIN')),
                ('kilometraje', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rut', models.CharField(max_length=12, unique=True)),
                ('telefono', models.CharField(blank=True, max_length=50, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='Los grupos a los que pertenece este usuario. Un usuario obtendrá todos los permisos otorgados a cada uno de sus grupos.', related_name='usuarios_groups', to='auth.group', verbose_name='grupos')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permisos específicos para este usuario.', related_name='usuarios_permissions', to='auth.permission', verbose_name='permisos de usuario')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Agendamiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_hora_programada', models.DateTimeField()),
                ('duracion_estimada_minutos', models.PositiveIntegerField(default=60, help_text='Duración estimada en minutos para evitar solapamientos.')),
                ('motivo_ingreso', models.TextField(help_text='Breve descripción del motivo de la visita.')),
                ('estado', models.CharField(choices=[('Programado', 'Programado'), ('Confirmado', 'Confirmado'), ('Cancelado', 'Cancelado'), ('Completado', 'Completado')], default='Programado', max_length=50)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('chofer_asociado', models.ForeignKey(blank=True, limit_choices_to={'groups__name': 'Chofer'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agendamientos_chofer', to=settings.AUTH_USER_MODEL)),
                ('creado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agendamientos_creados', to=settings.AUTH_USER_MODEL)),
                ('vehiculo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agendamientos', to='accounts.vehiculo')),
            ],
            options={
                'verbose_name': 'Agendamiento',
                'verbose_name_plural': 'Agendamientos',
                'ordering': ['fecha_hora_programada'],
            },
        ),
        migrations.CreateModel(
            name='Orden',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_ingreso', models.DateTimeField(default=django.utils.timezone.now)),
                ('fecha_entrega_estimada', models.DateField(blank=True, null=True)),
                ('fecha_entrega_real', models.DateTimeField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('Ingresado', 'Ingresado'), ('En Diagnostico', 'En Diagnóstico'), ('En Proceso', 'En Proceso'), ('Pausado', 'Pausado'), ('Finalizado', 'Finalizado')], default='Ingresado', max_length=50)),
                ('descripcion_falla', models.TextField(verbose_name='Descripción de la Falla (Cliente)')),
                ('diagnostico_tecnico', models.TextField(blank=True, null=True, verbose_name='Diagnóstico Técnico (Mecánico)')),
                ('agendamiento_origen', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orden_generada', to='accounts.agendamiento')),
                ('usuario_asignado', models.ForeignKey(blank=True, limit_choices_to={'groups__name__in': ['Mecanico', 'Supervisor']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ordenes_asignadas', to=settings.AUTH_USER_MODEL)),
                ('vehiculo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ordenes', to='accounts.vehiculo')),
            ],
            options={
                'verbose_name': 'Orden de Servicio',
                'verbose_name_plural': 'Órdenes de Servicio',
            },
        ),
        migrations.CreateModel(
            name='OrdenDocumento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('Foto', 'Foto'), ('Informe', 'Informe'), ('PDF', 'PDF'), ('Otro', 'Otro')], max_length=50)),
                ('descripcion', models.CharField(blank=True, max_length=255)),
                ('archivo', models.FileField(help_text='Sube un archivo (foto, PDF, etc.)', upload_to='ordenes_documentos/%Y/%m/')),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('orden', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='accounts.orden')),
                ('subido_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Documento de Orden',
                'verbose_name_plural': 'Documentos de Órdenes',
            },
        ),
        migrations.CreateModel(
            name='OrdenHistorialEstado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(max_length=50)),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('motivo', models.CharField(blank=True, help_text='Motivo del cambio de estado, especialmente para pausas.', max_length=255, null=True)),
                ('orden', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historial_estados', to='accounts.orden')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Historial de Estado de Orden',
                'verbose_name_plural': 'Historiales de Estado de Órdenes',
            },
        ),
        migrations.CreateModel(
            name='OrdenItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.DecimalField(decimal_places=2, default=1.0, max_digits=10)),
                ('precio_unitario', models.DecimalField(decimal_places=2, help_text='Precio al momento de la venta/servicio.', max_digits=10)),
                ('orden', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='accounts.orden')),
                ('producto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.producto')),
                ('servicio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.servicio')),
            ],
            options={
                'verbose_name': 'Ítem de Orden',
                'verbose_name_plural': 'Ítems de Órdenes',
            },
        ),
    ]
